<?xml version="1.0" encoding="UTF-8"?>

<project name="DnaDesignGUI.makejar" basedir="./build/" default="default">
	<!-- make sure outjar / outjar2 are both only filenames, no paths. -->

<!-- random number generator -->	
	<scriptdef language="javascript" manager="javax" name="random"><attribute name="max"/><attribute name="property"/>
var max=attributes.get("max")
var property=attributes.get("property")
if(max==null || property==null) {
  self.fail("'property' or 'max' is not set")
} else { 
  var result=java.util.Random().nextInt(max) 
  self.log("Generated random number " + result)
  project.setNewProperty(property, result);
}
	</scriptdef>

	<random max="999999" property="Disambiguator"/>
	<property name="DeploymentJarMatches" value="DnaDesignerGui" />
	<property name="DeploymentName" value="${DeploymentJarMatches}${Disambiguator}" />
	<property name="p5Main" value="DnaDesignGUI.DnaDesignGui" />
	<property name="p5Main2" value="DnaDesignGUI.FoldingImplTestGui" />
	<!-- Path to the actual DNADesign package. -->
	<!--<property name="DnaDesignPath" value="/home/benjamin/BuildAssignments/DnaDesign/DnaDesign/DNADesign" />-->
	<property name="DnaDesignPath" value="C:\Users\Benjamin\PROGRAMMING\Personal\GithubRepos\DNADesign\DNADesign" />
	
	<!--<property name="DSSEngine_path" value="/home/benjamin/BuildAssignments/DnaDesign/BuildReqsForDna/TaiWebDeployUtils/DSSEngine" />-->
	<property name="DSSEngine_path" value="C:\Users\Benjamin\PROGRAMMING\Personal\GithubRepos\TaiWebDeployUtils\DSSEngine" />
	<property name="DSS_anttasks_path" value="${DSSEngine_path}/DSS-anttasks.jar" />
	<property name="ant_contrib_jar" value="${DSSEngine_path}/ant-contrib-1.0b3.jar" />
	
	<!-- outjar contains code, outjar2 contains resources (images, etc. -->
	<!-- outjar is loaded immediately, outjar2 is lazily loaded -->
	<property name="outjar" value="${DeploymentName}_1.jar" />
	<property name="webjar" value="${DeploymentName}_web_1.jar" />
	<property name="webjar2" value="${DeploymentName}_web_2.jar" />
	
	<property name="lib" value="${DSSEngine_path}/lib" />
	<property name="dataDir_local" value="../res" />
	<property name="dataDir" value="${DSSEngine_path}/res" />
	<property name="taiLaunchMain" value="Deployments.${DeploymentName}" />
	<property name="toCompileJava_Core" value="
		${DSSEngine_path}/src:
		${DSSEngine_path}/src_lib/jmep:
		${DSSEngine_path}/src_lib/jmpeg:
		${DSSEngine_path}/src_lib/jorbis:
		${DSSEngine_path}/src_lib/minim:
		${DSSEngine_path}/src_lib/viperapi:
		${DSSEngine_path}/src_lib/vorbisspi
		" />
	<property name="toCompileJava" value="
		../src:
		${DnaDesignPath}/src
		"/>
	<property name="onlineIncludes_Core" value="
		BulletGame*/**/*.class,
		Deployments*/**/*.class,
		DNA*/**/*.class,
		processing*/**/*.class,
		TaiGameCore/*.class,
		TaiScript*/**/*.class,
		com/iabcinc/**/*.class,
		com/jcraft/**/*.class,
		ddf/**/*.class,
		javazoom/**/*.class,
		edu/**/*.class," />
	<property name="onlineIncludes" value="
		DnaDesign*/**/*.class,
		" />
	
	<!--Def the tasks. -->
	<taskdef name="increment" classname="uttaifun.funant.increment" classpath="${DSS_anttasks_path}" />
	<taskdef name="trycatch" classname="net.sf.antcontrib.logic.TryCatchTask" classpath="${ant_contrib_jar}"/>
	<taskdef name="srchreplace" classname="uttaifun.funant.srchReplace" classpath="${DSS_anttasks_path}" />
	<taskdef name="signit" classname="uttaifun.funant.signit" classpath="${DSS_anttasks_path}" />
	<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" classpath="${ant_contrib_jar}"/>
	<taskdef name="propertyregex" classname="net.sf.antcontrib.property.RegexTask" classpath="${ant_contrib_jar}"/>
	  
	  
	<target name="makeAdditional" description="Builds outjar2.">
	</target>

	<!-- NOTE! you must pass -Ddeploypath="MYURL" to run the game from any other directory!
	This is because the JNLP tool uses ABSOLUTE paths (for security reasons) -->
	<property name="deploypath" value="file:///${basedir}/web" />
	
	<!-- Note: if you get annoyed at the time makeAdditional takes to run, it's not 
	necessary to run each time. -->
	<target name="default"  depends="makeAdditional, makeWeb, uploadHtml, compile.doc" />
	<target name="default_winrun" depends="makeAdditional,makeWeb, uploadHtml, compile.doc">
		<exec executable="cmd.exe">
			<arg line="/C start ${basedir}/web/index.html" />
		</exec>
	</target>


	
	<target name="compile.java" description="Compiles the java files" >
		<mkdir dir="./bin/" />
            <!-- the PREPROC encoding is offered by the java simple processor -->
        <javac destdir="./bin/" includes="**/**"
               includeAntRuntime="false" optimize="true"
			   debug="true" debuglevel="lines,vars,source"
			   target="1.5" source="1.5">
            <src path="${toCompileJava}" />
	<classpath>
<pathelement location="${lib}/Java/Processing/core.jar"/>
<pathelement location="${lib}/Java/Processing/pdf/library/itext.jar"/>
<pathelement location="${lib}/Java/Processing/pdf/library/pdf.jar"/>
<!--
<pathelement location="${lib}/Java/Processing/minim/library/tritonus_share.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/jl1.0.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/jsminim.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/minim.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/mp3spi1.9.4.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/tritonus_aos.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/tritonus_jorbis.jar"/>
<pathelement location="${lib}/Java/Processing/minim/library/vorbisspi1.0.3.jar"/>
<pathelement location="${dataDir}/web/natives/gluegen-rt.jar"/>
<pathelement location="${dataDir}/web/natives/nativewindow.all.jar"/>
<pathelement location="${dataDir}/web/natives/jogl.all.jar"/>
-->
			</classpath>
        </javac>
	</target>

	<target name="makeWeb" description="Sets up the webpage form of this app." depends="compile.java">
		<echo message="Warning: makeweb does not run makeAdditional!" />
		<mkdir dir="./web/" />

		<!--
		<copy file="${lib}/Java/Processing/minim/library/jl1.0.jar" tofile="./web/jl1.0.jar" />
		<copy file="${lib}/Java/Processing/minim/library/jsminim.jar" tofile="./web/jsminim.jar" />
		<copy file="${lib}/Java/Processing/minim/library/minim.jar" tofile="./web/minim.jar" />
		<copy file="${lib}/Java/Processing/minim/library/minim-spi.jar" tofile="./web/minim-spi.jar" />
		<copy file="${lib}/Java/Processing/minim/library/mp3spi1.9.4.jar" tofile="./web/mp3spi1.9.4.jar" />
		<copy file="${lib}/Java/Processing/minim/library/tritonus_share.jar" tofile="./web/tritonus_share.jar" />
		-->

		<!-- custom make the main jar -->
		
	<trycatch property="foo" reference="bar">
  <try>
	    <delete>
		<fileset dir="./web/" includes="${DeploymentJarMatches}*" />
		</delete>
  </try>

  <catch>
    <echo>Could not delete old jars. No problem, but may cause clutter.</echo>
  </catch>

  <finally>
  </finally>
</trycatch>
        <jar jarfile="./web/DnaDesign.jar" basedir="./bin/" includes="DnaDesign/**/*.class">
		</jar>
		<jar jarfile="./web/${webjar}" includes="${onlineIncludes}" basedir="./bin/" excludes="DnaDesign/**/*.class">
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/core.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/pdf/library/itext.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/pdf/library/pdf.jar" />
<!--
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/jl1.0.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/mp3spi1.9.4.jar" />

			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/minim.jar" />

			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/jsminim.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/minim-spi.jar" />
			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/tritonus_share.jar" />

			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/tritonus_jorbis.jar" />

			<zipfileset excludes="META-INF/*.SF" src="${lib}/Java/Processing/minim/library/vorbisspi1.0.3.jar" />
-->
		</jar>
	</target>
	
	<target name="compile.doc" >
	<!-- none to compile. -->
	</target>

	<target name="uploadHtml" description="Prepares the app for the web (required for all use)">
		<!-- sign the jar! -->
		<echo message="NOTE: you have to create a key/value pair using KeyTool and use it to sign the jar! " />
		
		<signit dir="/web/" file="${webjar}" keyname="mykey2" pass="codeofdoom" />
		<signit dir="/web/" file="DnaDesign.jar" keyname="mykey2" pass="codeofdoom" />
		
		<copy todir=".">
			<fileset dir="${dataDir_local}/web" includes="*.html,*.jnlp" />
		</copy>
		<!-- replace the {CLASSNAME} with our applet -->
		<srchreplace srcfile="${basedir}/web_template.html" destfile="${basedir}/web_template3.html" srch="{APPLETWIDTH}" rep="640" deletesrch="true" />
		<srchreplace srcfile="${basedir}/web_template3.html" destfile="${basedir}/web_template4.html" srch="{APPLETHEIGHT}" rep="480" deletesrch="true" />
		<srchreplace srcfile="${basedir}/web_template4.html" destfile="${basedir}/web_template5.html" srch="{DESTINATION_URL_DIR}" rep="${deploypath}" deletesrch="true" />
		<srchreplace srcfile="${basedir}/web_template5.html" destfile="${basedir}/web_template6.html" srch="{CLASSLIBJAR}" rep="${webjar},DnaDesign.jar" deletesrch="true" />
		<srchreplace srcfile="${basedir}/web_template6.html" destfile="${basedir}/index2.html" srch="{CLASSNAME}" rep="${p5Main}" deletesrch="false"/>
		<srchreplace srcfile="${basedir}/web_template6.html" destfile="${basedir}/index3.html" srch="{CLASSNAME}" rep="${p5Main2}" deletesrch="true" />
		<move todir="${basedir}/web">
			<fileset dir="." includes="*.html,*.jnlp" />
		</move>
		<copy todir="${basedir}/web">
			<fileset dir="${dataDir_local}/web" includes="*.png,*.svg" />
		</copy>
	</target>

</project>
